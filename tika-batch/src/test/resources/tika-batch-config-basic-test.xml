<?xml version="1.0" encoding="UTF-8" standalone="no" ?>

<tika-batch-config
        maxAliveTimeSeconds="-1"
        pauseOnEarlyTerminationMillis="500"
        timeoutThresholdMillis="300000"
        timeoutCheckPulseMillis="1000"
        maxTimedOutConsumers="2"
        maxQueueSize="10000"
        numConsumers="5">

    <!-- options to allow on the commandline -->
    <commandline>
        <option opt="bc" longOpt="batch-config" hasArg="true"
                description="xml batch config file" required="true"/>
        <option opt="randomCrawl" hasArg="false"
                description="file crawler crawls directories randomly"/>
        <option opt="numConsumers" hasArg="true"
                description="number of fileConsumers threads"/>
        <option opt="minFileSizeBytes" hasArg="true"
                description="minimum file size (in bytes) to process; do not process files smaller than this"/>
        <option opt="maxFileSizeBytes" hasArg="true"
                description="maximum file size (in bytes) to process; do not process files larger than this"/>
        <option opt="maxTimedOutConsumers" hasArg="true"
                description="maximum number of allowed timed out consumers"/>
        <option opt="maxQueueSize" hasArg="true"
                description="maximum queue size for FileResources"/>
        <option opt="fileList" hasArg="true"
                description="file that contains a list of files (relative to inputDir) to process"/>
        <option opt="fileListEncoding" hasArg="true"
                description="encoding for fileList"/>
        <option opt="inputDir" hasArg="true"
                description="root directory for the files to be processed"
                required="true"/>
        <option opt="startDir" hasArg="true"
                description="directory (under inputDir) at which to start crawling"/>
        <option opt="outputDir" hasArg="true"
                description="output directory for output"
                required="true"/>
        <option opt="recursiveParserWrapper"
                description="use the RecursiveParserWrapper or not (default = false)"/>
        <option opt="handleExisting" hasArg="true"
                description="if an output file already exists, do you want to: overwrite, rename or skip"/>
        <option opt="basicHandlerType" hasArg="true"
                description="what type of content handler: xml, text, html, body"/>
        <option opt="outputSuffix" hasArg="true"
                description="suffix to add to the end of the output file name"/>
        <option opt="timeoutThresholdMillis" hasArg="true"
                description="how long to wait before determining that a consumer should be timed out"/>
    </commandline>


    <!--
        Can also add startDir: this tells the crawler to start indexing a
        child directory of the inputDir directory.
    -->
	<crawler builderClass="org.apache.tika.batch.fs.builders.FSCrawlerBuilder"
		crawlOrder="sorted"
        maxConsecWaitMillis="5000"
		maxFilesToAdd="-1" 
		maxFilesToConsider="-1" 
		includeFilePat=""
		excludeFilePat=""
		maxFileSizeBytes="-1"
        minFileSizeBytes="-1"
        inputDir="tika-batch/src/test/resources/test-input"
        />


<!--
    This is an example of a crawler that reads a list of files to be processed from a
    file.  This assumes that the files in the list are relative to inputDir.
    <crawler builderClass="org.apache.tika.batch.fs.builders.FSCrawlerBuilder"
             fileList="files.txt"
             fileListEncoding="UTF-8"
             maxFilesToAdd="-1"
             maxFilesToConsider="-1"
             includeFilePat="(?i).pdf$"
             excludeFilePat="(?i).msg$"
             maxFileSizeBytes="-1"
             inputDir="input"
             startDir="input/subdir1"
    />
-->
	<consumers builderClass="org.apache.tika.batch.fs.builders.BasicTikaFSConsumersBuilder" recursiveParserWrapper="false">
		<parser class="org.apache.tika.batch.AutoDetectParserFactory" parseRecursively="true"/>
		<contenthandler builderClass="org.apache.tika.batch.builders.DefaultContentHandlerFactoryBuilder"
                        basicHandlerType="xml" writeLimit="-1"/>
		
		<!-- overwritePolicy: "skip" a file if output file exists, "rename" a output file, "overwrite" -->
		<outputstream class="FSOutputStreamFactory" handleExisting="skip" outputDir="output"
                encoding="UTF-8" outputSuffix="xml"/>
	</consumers>
	
	<!-- reporter and interrupter are optional -->
	<reporter builderClass="org.apache.tika.batch.builders.SimpleLogReporterBuilder" sleepMillis="1000"
              reporterStaleThresholdMillis="500000"/>
	<interrupter builderClass="org.apache.tika.batch.builders.CommandLineInterrupterBuilder"/>
</tika-batch-config>